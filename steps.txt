(1) Step1
----------
==> Install [@reduxjs/toolkit - react-redux - sass - axios - react-router-dom]

(2) Step2
----------
==> Create Needed Folders [common , components , images , features[Redux Logic]]

(3) Step3 
-----------
==> In [common] Folder Create [Colors.scss] And It's Content

(4) Step4
-----------
==> In [Components] Folder Create This Structure

    Components
        -Home (Home.js - Home.scss)
        -Footer (Footer.js - Footer.scss)
        -Header (Header.js - Header.scss)
        -MovieListing (MovieListing.js - MovieListing.scss)
        -MovieDetail (MovieDetail.js - MovieDetail.scss)
        -MovieCard (MovieCard.js - MovieCard.scss)
        -PageNotFound (PageNotFound.js - PageNotFound.scss)

(5) Step5 (Use OMDb API)
----------
==> Go To [OMDb] Website And Generate Key
==> Inside [common] Folder Create This Structure

    common
        -apis
            -MovieAPI.js
            -MovieAPIKey.js


    MovieAPIKey.js
    ---------------

    export const key = "e5a171a6"


    MovieAPI.js
    -------------

    import axios from "axios";

    export default axios.create({
        baseURL: 'https://www.omdbapi.com'
    })


(6) Configure Routing In [App.js]
-----------------------------------

    import { Route, Routes, BrowserRouter } from 'react-router-dom'
    import Home from './components/Home/Home'
    import Header from './components/Header/Header'
    import Footer from './components/Footer/Footer'
    import MovieDetail from './components/MovieDetail/MovieDetail'
    import PageNotFound from './components/PageNotFound/PageNotFound'
    import './App.scss';

    function App() {
        return (
            <BrowserRouter>
                <Header />
                <Routes>
                    <Route path='/' element={<Home />} />
                    <Route path='/movie/:id' element={<MovieDetail />} />
                    <Route path="*" element={<PageNotFound />} />
                </Routes>
                <Footer />
            </BrowserRouter >

        );
    }

    export default App;


(7) Create The Header And Style
---------------------------------

    /components/Header/Header.js
    ------------------------------

    import './Header.scss'
    import React from 'react'
    import { Link } from 'react-router-dom'
    import user from '../../images/user.png'


    function Header() {
        return (
            <div className='header'>
                <div className='logo'>
                    <Link to='/'>Movie RTK</Link>
                </div>
                <div className='user'>
                    <img src={user} />
                </div>
            </div>
        )
    }

    export default Header


(8) Add Style To [App.scss]
----------------------------

@import "./common/Colors.scss";

    *{
        padding: 0;
        margin: 0;
        box-sizing: border-box;
        font-family: 'Rubik', sans-serif;
    }

    body{
        background-color: $secondary-color;
    }
    a{
        text-decoration: none;
    }

    .container{
        margin: 0 40px;
    }


(9) Create Footer
-----------------

    /components/Footer/Footer.js
    -----------------------------

    import React from 'react'
    import './Footer.scss'

    function Footer() {
        return (
            <div className='footer'>
                <div className='container'>
                    <div>
                        Movie RTK
                    </div>
                    <div>
                        &copy; 2022 , Magdy Mohammed , Front End Developer
                    </div>
                </div>
            </div>
        )
    }

    export default Footer


(10) Create Home And Fetch Data In It
---------------------------------------

    /components/Home/Home.js
    -------------------------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import movieApi from '../../common/apis/MovieAPI'
    import { key } from '../../common/apis/MovieAPIKey'
    function Home() {

        useEffect(() => {

            const response = async () => {
                const movies = await movieApi.get(`?apiKey=${key}&s=movie&type=movie`).catch(err => console.log(err));
                console.log(movies.data.Search)
            }
            response()

        }, [])
        return (
            <div>
                <div>Image Banner</div>
                <MovieListing />
            </div>
        )
    }

    export default Home


(11) Handle Redux
-------------------

    /features/store.js
    -------------------

    import { configureStore } from "@reduxjs/toolkit";
    import movieReducer from './movies/movieSlices'

    const store = configureStore({
        reducer: {
            movies: movieReducer
        }
    })

    export default store


    /index.js
    ----------

    import React from 'react';
    import ReactDOM from 'react-dom';
    import App from './App';
    import { Provider } from 'react-redux'
    import store from './features/store'

    ReactDOM.render(
        <Provider store={store}>
            <React.StrictMode>
                <App />
            </React.StrictMode>
        </Provider>,
        document.getElementById('root')
    );


    /features/movies/movieSlice.js
    -------------------------------

    import { createSlice } from "@reduxjs/toolkit";

    const initState = {
        movies: []
    }

    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            addMovies: (state, { payload }) => {
                state.movies = payload
            }
        }
    })

    export default movieSlice.reducer
    export const { addMovies } = movieSlice.actions
    export const getAllMovies = state => state.movies.movies



    /components/Home/Home.js (Dispatch Here To Send Fetched Data To Redux)
    --------------------------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import movieApi from '../../common/apis/MovieAPI'
    import { key } from '../../common/apis/MovieAPIKey'
    import { useDispatch } from 'react-redux'
    import { addMovies } from '../../features/movies/movieSlices'
    function Home() {
        const dispatch = useDispatch()

        useEffect(() => {

            const response = async () => {
                const movies = await movieApi.get(`?apiKey=${key}&s=episode&type=movie`).catch(err => console.log(err));
                dispatch(addMovies(movies.data))
            }
            response()

        }, [])
        return (
            <div>
                <MovieListing />
            </div>
        )
    }

    export default Home



    /components/MovieListing/MovieListing.js
    ------------------------------------------

    import React from 'react'
    import { useSelector } from 'react-redux'
    import { getAllMovies } from '../../features/movies/movieSlices'
    import MovieCard from "../MovieCard/MovieCard"
    import './MovieListing.scss'

    function MovieListing() {
        const state = useSelector(getAllMovies)
        console.log(state)
        const renderMovies = state.Response ?
            (
                state.Search.map(movie => <MovieCard key={movie.imdbID} data={movie} />)
            ) : (
                <div className='movie-error'>Something Wrong</div>
            )

        return (
            <div className='movie-wrapper'>
                <div className='movie-list'>
                    <h2>Movies</h2>
                    <div className='movie-container'>
                        {renderMovies}
                    </div>
                </div>
            </div>
        )
    }

    export default MovieListing




    /components/MovieCard/MovieCard.js
    ------------------------------------

    import React from 'react'
    import './MovieCard.scss'
    function MovieCard({ data }) {
        console.log(data)
        return (
            <div className='card-item'>
                <div className='card-inner'>
                    <div className='card-top'>
                        <img src={data.Poster} />
                    </div>
                    <div className='card-body'>
                        <h3>{data.Title}</h3>
                    </div>
                </div>
                <p className='year'>{data.Year}</p>
            </div>
        )
    }

    export default MovieCard



(12) Use Redux async Thunk To Make Asynching Fetch
----------------------------------------------------
==> Moving Fetch Data Logic From [Home.js] Inside [movieSlice.js]

    /features/movies/movieSlice.js
    -------------------------------

    import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
    import movieApi from '../../common/apis/MovieAPI' // Import This
    import { key } from '../../common/apis/MovieAPIKey' // Import This

    // 1- Create This Function
    export const fetchAsyncMovies = createAsyncThunk("movieSlice/moviesFetchAsync", async () => {
        const movies = await movieApi.get(`?apiKey=${key}&s=Harry&type=movie`);
        return movies.data;
    })

    const initState = {
        movies: []
    }

    // Create Extra Reducers
    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            addMovies: (state, { payload }) => {
                state.movies = payload
            }
        },
        extraReducers: {
            [fetchAsyncMovies.pending]: () => {
                console.log('Pending')
            },
            [fetchAsyncMovies.fulfilled]: (state, { payload }) => {
                //state.movies = action.payload
                console.log('Fetched Success');
                return { ...state, movies: payload }
            },
            [fetchAsyncMovies.rejected]: () => {
                console.log('Rejected')
            }
        }
    })

    export default movieSlice.reducer
    //export const { addMovies } = movieSlice.actions
    export const getAllMovies = state => state.movies.movies


    /components/Home/Home.js
    --------------------------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import { useDispatch } from 'react-redux'
    import { fetchAsyncMovies } from '../../features/movies/movieSlices' // Import This

    function Home() {

        // Make New Dispatching
        const dispatch = useDispatch()

        useEffect(() => {
            dispatch(fetchAsyncMovies())
        }, [dispatch])

        return (
            <div>
                <MovieListing />
            </div>
        )
    }

    export default Home


(13) Add Fetching Series
--------------------------

    /features/movies/movieSlice.js
    -------------------------------

    import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
    import movieApi from '../../common/apis/MovieAPI' // Import This
    import { key } from '../../common/apis/MovieAPIKey' // Import This

    export const fetchAsyncMovies = createAsyncThunk("movieSlice/moviesFetchAsync", async () => {
        const movies = await movieApi.get(`?apiKey=${key}&s=Harry&type=movie`);
        return movies.data;
    })

    // 1- Create This Function
    export const fetchAsyncSeries = createAsyncThunk("movieSlice/seriesFetchAsync", async () => {
        const series = await movieApi.get(`?apiKey=${key}&s=football&type=series`);
        return series.data;
    })

    const initState = {
        movies: [],
        series: [] // Add Series Array
    }

    // Create Extra Reducers
    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            addMovies: (state, { payload }) => {
                state.movies = payload
            }
        },
        extraReducers: {
            [fetchAsyncMovies.pending]: () => {
                console.log('Pending')
            },
            [fetchAsyncMovies.fulfilled]: (state, { payload }) => {
                console.log('Fetched Success');
                return { ...state, movies: payload }
            },
            [fetchAsyncMovies.rejected]: () => {
                console.log('Rejected')
            },
            // Add Series Extra Reducer
            [fetchAsyncSeries.fulfilled]: (state, { payload }) => {
                console.log('Series Success');
                return { ...state, series: payload }
            }
        }
    })

    export default movieSlice.reducer
    //export const { addMovies } = movieSlice.actions
    // Export Series Method Here
    export const getAllMovies = state => state.movies.movies
    export const getAllSeries = state => state.movies.series


    /components/Home/Home.js
    --------------------------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import { useDispatch } from 'react-redux'
    // Import This
    import { fetchAsyncMovies, fetchAsyncSeries } from '../../features/movies/movieSlices' // Import This

    function Home() {
        const dispatch = useDispatch()

        useEffect(() => {
            dispatch(fetchAsyncMovies())
            dispatch(fetchAsyncSeries()) // Add Dispatching Series
        }, [dispatch])

        return (
            <div>
                <MovieListing />
            </div>
        )
    }

    export default Home


    /components/MovieListing/MovieListing.js
    ------------------------------------------

    import React from 'react'
    import { useSelector } from 'react-redux'
    // Import Series Method
    import { getAllMovies, getAllSeries } from '../../features/movies/movieSlices'
    import MovieCard from "../MovieCard/MovieCard"
    import './MovieListing.scss'

    function MovieListing() {
        // Get All Series
        const movies = useSelector(getAllMovies)
        const series = useSelector(getAllSeries)

        const renderMovies = movies.Response ?
            (
                movies.Search.map(movie => <MovieCard key={movie.imdbID} data={movie} />)
            ) : (
                <div className='movie-error'>Something Wrong</div>
            )
        
        // Mapping All Series
        const renderSeries = series.Response ?
            (
                series.Search.map(movie => <MovieCard key={movie.imdbID} data={movie} />)
            ) : (
                <div className='movie-error'>Something Wrong</div>
            )

        return (
            <div className='movie-wrapper'>
                <div className='movie-list'>
                    <h2>Movies</h2>
                    <div className='movie-container'>
                        {renderMovies}
                    </div>
                    <h2>Series</h2>
                    <div className='movie-container'>
                        {renderSeries}
                    </div>
                </div>
            </div>
        )
    }

    export default MovieListing


(14) Create Movie Details Page
--------------------------------


    /Components/MovieCard/MovieCard.js (Add Link And Set Id Of Link)
    -----------------------------------

    import React from 'react'
    import './MovieCard.scss'
    import { Link } from 'react-router-dom'

    function MovieCard({ data }) {
        return (
            <Link to={`/movie/${data.imdbID}`}>
                <div className='card-item'>
                    <div className='card-inner'>
                        <div className='card-top'>
                            <img src={data.Poster} />
                        </div>
                        <div className='card-body'>
                            <h3>{data.Title}</h3>
                        </div>
                    </div>
                    <p className='year'>{data.Year}</p>
                </div>
            </Link>
        )
    }

    export default MovieCard



    /features/movies/movieSlice.js [Create Async Action Of Fetch Movie Details]
    -------------------------------

    import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
    import movieApi from '../../common/apis/MovieAPI'
    import { key } from '../../common/apis/MovieAPIKey'

    export const fetchAsyncMovies = createAsyncThunk("movieSlice/moviesFetchAsync", async () => {
        const movies = await movieApi.get(`?apiKey=${key}&s=Harry&type=movie`);
        return movies.data;
    })

    export const fetchAsyncSeries = createAsyncThunk("movieSlice/seriesFetchAsync", async () => {
        const series = await movieApi.get(`?apiKey=${key}&s=horror&type=series`);
        return series.data;
    })

    // 1- Make This Method
    export const fetchAsyncMovieOrSeriesDetail = createAsyncThunk("movieSlice/MovieOrSeriesFetchAsync", async (id) => {
        const selectedMovie = await movieApi.get(`?apiKey=${key}&i=${id}&Plot=full`);
        return selectedMovie.data;
    })

    const initState = {
        movies: [],
        series: [],
        selectedMovie: {} // 2- Add Selected Movie Object
    }


    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            addMovies: (state, { payload }) => {
                state.movies = payload
            }
        },
        extraReducers: {
            [fetchAsyncMovies.pending]: () => {
                console.log('Pending')
            },
            [fetchAsyncMovies.fulfilled]: (state, { payload }) => {
                console.log('Fetched Success');
                return { ...state, movies: payload }
            },
            [fetchAsyncMovies.rejected]: () => {
                console.log('Rejected')
            },
            [fetchAsyncSeries.fulfilled]: (state, { payload }) => {
                console.log('Series Success');
                return { ...state, series: payload }
            },
            // 3- Add Extra Reducer Of Details
            [fetchAsyncMovieOrSeriesDetail.fulfilled]: (state, { payload }) => {
                console.log('Fetch Detail Success')
                return { ...state, selectedMovie: payload }
            }
        }
    })

    export default movieSlice.reducer
    //export const { addMovies } = movieSlice.actions
    export const getAllMovies = state => state.movies.movies
    export const getAllSeries = state => state.movies.series
    export const getSelectedMovie = state => state.movies.selectedMovie // 4- Add This Export


    /Components/MovieDetail/MovieDetail.js
    ---------------------------------------

    import React, { useEffect } from 'react'
    import { useParams } from 'react-router-dom'
    import { fetchAsyncMovieOrSeriesDetail } from '../../features/movies/movieSlices.js'
    import { getSelectedMovie } from '../../features/movies/movieSlices'
    import { useDispatch, useSelector } from 'react-redux'
    import './MovieDetail.scss'

    function MovieDetail() {
        const { id } = useParams()

        const dispatch = useDispatch()
        const selectedMovie = useSelector(getSelectedMovie)
        const {
            Title,
            imdbRating,
            imdbVotes,
            Runtime,
            Year,
            Poster,
            Plot,
            Director,
            Actors,
            Genre,
            Language
        } = selectedMovie;
        useEffect(() => {
            dispatch(fetchAsyncMovieOrSeriesDetail(id))

        }, [dispatch, id])

        console.log(selectedMovie)
        return (
            <div className='movie-details'>
                <div className='section-left'>
                    <h2 className='movie-title'>{Title}</h2>
                    <ul className='movie-data-list'>
                        <li>Rating <i className='fa fa-star'></i>: {imdbRating}</li>
                        <li>Votes <i className="fas fa-concierge-bell"></i>: {imdbVotes}</li>
                        <li>Runtime<i className="far fa-clock"></i>: {Runtime}</li>
                        <li>Year<i className="far fa-calendar-alt"></i>: {Year && (Year.length !== 5 ? (Year) : (Year.replace('–', '')))}</li>
                    </ul>
                    <p>
                        {Plot}
                    </p>
                    <div className='movie-data-info'>
                        <ul>
                            <li>Director : <span>{Director}</span></li>
                            <li>Actors : <span>{Actors}</span></li>
                            <li>Type : <span>{Genre}</span></li>
                            <li>Languages : <span>{Language}</span></li>
                        </ul>
                    </div>
                </div>
                <div className='section-right'>
                    <img src={Poster} alt={Title} />
                </div>
            </div>
        )
    }

    export default MovieDetail


(15) Remove Selected Movie After Return From Details Page To Home Page
--------------------------------------------------------------------------

    /features/movies/movieSlice.js
    -------------------------------

    import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
    import movieApi from '../../common/apis/MovieAPI'
    import { key } from '../../common/apis/MovieAPIKey'

    export const fetchAsyncMovies = createAsyncThunk("movieSlice/moviesFetchAsync", async () => {
        const movies = await movieApi.get(`?apiKey=${key}&s=Harry&type=movie`);
        return movies.data;
    })

    export const fetchAsyncSeries = createAsyncThunk("movieSlice/seriesFetchAsync", async () => {
        const series = await movieApi.get(`?apiKey=${key}&s=horror&type=series`);
        return series.data;
    })

    export const fetchAsyncMovieOrSeriesDetail = createAsyncThunk("movieSlice/MovieOrSeriesFetchAsync", async (id) => {
        const selectedMovie = await movieApi.get(`?apiKey=${key}&i=${id}&Plot=full`);
        return selectedMovie.data;
    })

    const initState = {
        movies: [],
        series: [],
        selectedMovie: {}
    }


    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            // 1- Create Remove Selected Function Here
            removeSelectedMovie: (state) => {
                state.selectedMovie = {}
            }
        },
        extraReducers: {
            [fetchAsyncMovies.pending]: () => {
                console.log('Pending')
            },
            [fetchAsyncMovies.fulfilled]: (state, { payload }) => {
                console.log('Fetched Success');
                return { ...state, movies: payload }
            },
            [fetchAsyncMovies.rejected]: () => {
                console.log('Rejected')
            },
            [fetchAsyncSeries.fulfilled]: (state, { payload }) => {
                console.log('Series Success');
                return { ...state, series: payload }
            },
            [fetchAsyncMovieOrSeriesDetail.fulfilled]: (state, { payload }) => {
                console.log('Fetch Detail Success')
                return { ...state, selectedMovie: payload }
            }
        }
    })

    export default movieSlice.reducer
    // 2- Export Remove Selected Movie Function Here
    export const { removeSelectedMovie } = movieSlice.actions
    export const getAllMovies = state => state.movies.movies
    export const getAllSeries = state => state.movies.series
    export const getSelectedMovie = state => state.movies.selectedMovie // 4- Add This Export


    /Components/Home/Home.js
    ------------------------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import { useDispatch } from 'react-redux'
    // Import removeSelectedMovie From Movie Slice
    import { fetchAsyncMovies, fetchAsyncSeries, removeSelectedMovie } from '../../features/movies/movieSlices' // Import This

    function Home() {
        const dispatch = useDispatch()

        useEffect(() => {
            dispatch(fetchAsyncMovies())
            dispatch(fetchAsyncSeries())
            // Dispatch removeSelectedMovie
            dispatch(removeSelectedMovie())
        }, [dispatch])

        return (
            <div>
                <MovieListing />
            </div>
        )
    }

    export default Home


(16) Showing Loading Text When Fetch Data In Details Page (Using Object.keys())
--------------------------------------------------------------------------------

    /Components/MovieDetail/MovieDetail.js
    ---------------------------------------

    import React, { useEffect } from 'react'
    import { useParams } from 'react-router-dom'
    import { fetchAsyncMovieOrSeriesDetail } from '../../features/movies/movieSlices.js'
    import { getSelectedMovie } from '../../features/movies/movieSlices'
    import { useDispatch, useSelector } from 'react-redux'
    import './MovieDetail.scss'

    function MovieDetail() {
        const { id } = useParams()

        const dispatch = useDispatch()
        const selectedMovie = useSelector(getSelectedMovie)
        const {
            Title,
            imdbRating,
            imdbVotes,
            Runtime,
            Year,
            Poster,
            Plot,
            Director,
            Actors,
            Genre,
            Language
        } = selectedMovie;
        useEffect(() => {
            dispatch(fetchAsyncMovieOrSeriesDetail(id))

        }, [dispatch, id])

        return (
            <div className='movie-details'>
                {
                    Object.keys(selectedMovie).length ? (
                        <>
                            <div className='section-left'>
                                <h2 className='movie-title'>{Title}</h2>
                                <ul className='movie-data-list'>
                                    <li>Rating <i className='fa fa-star'></i>: {imdbRating}</li>
                                    <li>Votes <i className="fas fa-concierge-bell"></i>: {imdbVotes}</li>
                                    <li>Runtime<i className="far fa-clock"></i>: {Runtime}</li>
                                    <li>Year<i className="far fa-calendar-alt"></i>: {Year && (Year.length !== 5 ? (Year) : (Year.replace('–', '')))}</li>
                                </ul>
                                <p>
                                    {Plot}
                                </p>
                                <div className='movie-data-info'>
                                    <ul>
                                        <li>Director : <span>{Director}</span></li>
                                        <li>Actors : <span>{Actors}</span></li>
                                        <li>Type : <span>{Genre}</span></li>
                                        <li>Languages : <span>{Language}</span></li>
                                    </ul>
                                </div>
                            </div>
                            <div className='section-right'>
                                <img src={Poster} alt={Title} />
                            </div>
                        </>
                    ) : (<div className='loading'>Loading</div>)
                }
            </div>
        )
    }

    export default MovieDetail


(17) Setup Carousel
--------------------
==> [npm install react-slick --save]

==> Add This Links To [index.html]

    <link rel="stylesheet" type="text/css" charset="UTF-8" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css" /> 
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css" />

==> Setup Slider In [MovieListing.js]
==> Remove [movie-container] Class From Slider Parent In [MovieListing.js]
==> Add Some Margin To [MovieCard.js]
==> Can Separate Slider Settings In Another Js File And Make Responsive Options Too

    MovieListing.js
    -----------------

    import React from 'react'
    import { useSelector } from 'react-redux'
    import { getAllMovies, getAllSeries } from '../../features/movies/movieSlices'
    import MovieCard from "../MovieCard/MovieCard"
    import './MovieListing.scss'
    import Slider from 'react-slick' // 1- Import Slider Here

    function MovieListing() {
        // 2- Set Settings
        const settings = {
            dots: true,
            infinite: true,
            speed: 500,
            slidesToShow: 5,
            slidesToScroll: 3
        };
        const movies = useSelector(getAllMovies)
        const series = useSelector(getAllSeries)

        const renderMovies = movies.Response ?
            (
                movies.Search.map(movie => <MovieCard key={movie.imdbID} data={movie} />)
            ) : (
                <div className='movie-error'>Loading...</div>
            )

        const renderSeries = series.Response ?
            (
                series.Search.map(movie => <MovieCard key={movie.imdbID} data={movie} />)
            ) : (
                <div className='movie-error'>Loading...</div>
            )

        // 3- Wrap 'renderMovies' With Slider Here
        return (
            <div className='movie-wrapper'>
                <div className='movie-list'>
                    <h2>Movies</h2>
                    <div>
                        <Slider {...settings}>
                            {renderMovies}
                        </Slider>
                    </div>
                    <h2>Series</h2>
                    <div className='movie-container'>
                        {renderSeries}
                    </div>
                </div>
            </div>
        )
    }

    export default MovieListing


(18) Add Search Method
-------------------------
==> Add Search Bar In [Header.js]
==> In [movieSlice.js] Set 'term' Parameter To 'fetchAsyncMovies' And 'fetchAsyncSeries' Methods
==> In [Home.js] Add Default Movie And Series Searched Text


    Header.js
    ------------

    import './Header.scss'
    import React, { useState } from 'react'
    import { Link } from 'react-router-dom'
    import user from '../../images/user.png'
    import { useDispatch } from 'react-redux'
    import { fetchAsyncMovies, fetchAsyncSeries } from '../../features/movies/movieSlices' // Import This


    function Header() {
        const [term, setTerm] = useState('')
        const dispatch = useDispatch()

        const submitHandler = e => {
            e.preventDefault()
            if (term.trim()) {
                dispatch(fetchAsyncSeries(term))
                dispatch(fetchAsyncMovies(term))
            } else {
                alert('Please Enter Movie Or Series To Search')
            }

        }
        return (
            <div className='header'>
                <div className='logo'>
                    <Link to='/'>Movie RTK</Link>
                </div>
                <div className='search-bar'>
                    <form onSubmit={submitHandler}>
                        <input type='text' placeholder='Search For Movie Or Show' value={term} onChange={e => setTerm(e.target.value)} />
                        <button type='submit'><i className='fa fa-search'></i></button>
                    </form>
                </div>
                <div className='user'>
                    <img src={user} />
                </div>
            </div>
        )
    }

    export default Header



    movieSlice.js
    ----------------

    import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
    import movieApi from '../../common/apis/MovieAPI'
    import { key } from '../../common/apis/MovieAPIKey'

    export const fetchAsyncMovies = createAsyncThunk("movieSlice/moviesFetchAsync", async (term) => {
        const movies = await movieApi.get(`?apiKey=${key}&s=${term}&type=movie`);
        return movies.data;
    })

    export const fetchAsyncSeries = createAsyncThunk("movieSlice/seriesFetchAsync", async (term) => {
        const series = await movieApi.get(`?apiKey=${key}&s=${term}&type=series`);
        return series.data;
    })

    export const fetchAsyncMovieOrSeriesDetail = createAsyncThunk("movieSlice/MovieOrSeriesFetchAsync", async (id) => {
        const selectedMovie = await movieApi.get(`?apiKey=${key}&i=${id}&Plot=full`);
        return selectedMovie.data;
    })

    const initState = {
        movies: [],
        series: [],
        selectedMovie: {}
    }


    const movieSlice = createSlice({
        name: 'movieSlice',
        initialState: initState,
        reducers: {
            removeSelectedMovie: (state) => {
                state.selectedMovie = {}
            }
        },
        extraReducers: {
            [fetchAsyncMovies.pending]: () => {
                console.log('Pending')
            },
            [fetchAsyncMovies.fulfilled]: (state, { payload }) => {
                console.log('Fetched Success');
                return { ...state, movies: payload }
            },
            [fetchAsyncMovies.rejected]: () => {
                console.log('Rejected')
            },
            [fetchAsyncSeries.fulfilled]: (state, { payload }) => {
                console.log('Series Success');
                return { ...state, series: payload }
            },
            [fetchAsyncMovieOrSeriesDetail.fulfilled]: (state, { payload }) => {
                console.log('Fetch Detail Success')
                return { ...state, selectedMovie: payload }
            }
        }
    })

    export default movieSlice.reducer
    export const { removeSelectedMovie } = movieSlice.actions
    export const getAllMovies = state => state.movies.movies
    export const getAllSeries = state => state.movies.series
    export const getSelectedMovie = state => state.movies.selectedMovie // 4- Add This Export


    Home.js
    --------

    import React, { useEffect } from 'react'
    import MovieListing from '../MovieListing/MovieListing'
    import { useDispatch } from 'react-redux'
    // Import removeSelectedMovie From Movie Slice
    import { fetchAsyncMovies, fetchAsyncSeries, removeSelectedMovie } from '../../features/movies/movieSlices' // Import This

    function Home() {
        const dispatch = useDispatch()

        const movieText = 'Harry'
        const seriesText = 'Horror'
        useEffect(() => {
            dispatch(fetchAsyncMovies(movieText))
            dispatch(fetchAsyncSeries(seriesText))
            // Dispatch removeSelectedMovie
            dispatch(removeSelectedMovie())
        }, [dispatch])

        return (
            <div>
                <MovieListing />
            </div>
        )
    }

    export default Home